{"ast":null,"code":"var _jsxFileName = \"/Users/komiyaakira/Desktop/todoapp/src/components/App.js\";\nimport React from \"react\";\nimport Form from \"./Form\";\nimport Todo from \"./Todo\";\nimport LikeButton from \"./LikeButton\";\nimport EditTodo from \"./EditTodo\";\nlet currentId = 0;\nconst APP_KEY = 'todos';\nconst USERS_KEY = 'users';\nconst LIKES_KEY = 'likes';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onLkeButtonClick = (user_id, todo_id) => {\n      let users = this.state.users;\n      var result = this.state.todos.filter(function (value) {\n        return todo_id === value.id;\n      });\n      const todo = result[0];\n      const todoCurUser = todo['curUser']['id'];\n      const todoInvUser = todo['invUser']['id'];\n      console.log(todoCurUser);\n      console.log(todoInvUser);\n      console.log(this.state.likes);\n      var data = this.state.likes;\n      var result = data.filter(function (value) {\n        return user_id === value.user_id && todo_id === value.todo_id;\n      });\n      console.log(result.length);\n\n      if (result.length >= 15) {\n        alert(\"15回以上押せません\");\n        return;\n      }\n\n      if (this.state.curUser['count'] == 0) {\n        alert(\"拍手できません\");\n        return;\n      }\n\n      if (todoCurUser == user_id) {\n        alert(\"拍手できません\");\n        return;\n      }\n\n      if (todoInvUser == user_id) {\n        alert(\"拍手できません\");\n        return;\n      }\n\n      for (let y = 0; y < users.length; y++) {\n        if (users[y].id === todoCurUser) {\n          users[y].counted++;\n        }\n\n        if (users[y].id === todoInvUser) {\n          users[y].counted++;\n        }\n      }\n\n      this.setState({\n        users: users\n      });\n      let countUser = this.state.curUser;\n      countUser['count'] -= 2;\n      this.setState({\n        curUser: countUser\n      });\n      const like = {\n        user_id: user_id,\n        todo_id: todo_id\n      };\n      this.setState({\n        likes: this.state.likes.concat(like)\n      });\n      setTimeout(() => localStorage.setItem(LIKES_KEY, JSON.stringify(this.state.likes)), 10);\n      setTimeout(() => localStorage.setItem(USERS_KEY, JSON.stringify(this.state.users)), 10);\n    };\n\n    this.handleSubmit = (text, curUser, invUser) => {\n      const date = new Date();\n      const newTodo = {\n        id: currentId,\n        text,\n        curUser,\n        invUser,\n        completed: false,\n        editing: false,\n        postDate: this.getStringFromDate(date)\n      };\n\n      if (curUser == invUser) {\n        return;\n      }\n\n      ;\n      console.log(newTodo);\n      const newTodos = [newTodo, ...this.state.todos];\n      this.setState({\n        todos: newTodos\n      }); // localStrageにtodoをセット\n\n      localStorage.setItem(APP_KEY, JSON.stringify(newTodos));\n      currentId++;\n    };\n\n    this.handleCurUserSelectChange = curUser => {\n      this.setState({\n        curUser: curUser\n      });\n    };\n\n    this.handleInvUserSelectChange = invUser => {\n      this.setState({\n        invUser: invUser\n      });\n    };\n\n    this.handleChangeFilter = filter => {\n      this.setState({\n        filter\n      });\n    };\n\n    this.handleChangeAllCompleted = completed => {\n      const newTodos = this.state.todos.map(todo => {\n        return { ...todo,\n          completed\n        };\n      });\n      this.setState({\n        todos: newTodos\n      }); // localStrageにtodoをセット\n\n      localStorage.setItem(APP_KEY, JSON.stringify(newTodos));\n    };\n\n    this.handleUpdateTodoText = (id, text) => {\n      const newTodos = this.state.todos.map(todo => {\n        if (todo.id === id) {\n          return { ...todo,\n            text,\n            editing: false\n          };\n        }\n\n        return todo;\n      });\n      this.setState({\n        todos: newTodos\n      }); // localStrageにtodoをセット\n\n      localStorage.setItem(APP_KEY, JSON.stringify(newTodos));\n    };\n\n    this.handleClickDelete = id => {\n      const newTodos = this.state.todos.filter(todo => todo.id !== id);\n      this.setState({\n        todos: newTodos\n      }); // localStrageにtodoをセット\n\n      localStorage.setItem(APP_KEY, JSON.stringify(newTodos));\n    };\n\n    this.handleChangeDeleteCompleted = () => {\n      const newTodos = this.state.todos.filter(({\n        completed\n      }) => !completed);\n      this.setState({\n        todos: newTodos\n      }); // localStrageにtodoをセット\n\n      localStorage.setItem(APP_KEY, JSON.stringify(newTodos));\n    };\n\n    this.handleChangeTodoAttribute = (id, key, value) => {\n      const newTodos = this.state.todos.map(todo => {\n        if (todo.id === id) {\n          return { ...todo,\n            [key]: value\n          };\n        }\n\n        return todo;\n      });\n      this.setState({\n        todos: newTodos\n      }); // localStrageにtodoをセット\n\n      localStorage.setItem(APP_KEY, JSON.stringify(newTodos));\n    };\n\n    this.state = {\n      todos: [],\n      curUser: \"\",\n      invUser: \"\",\n      count: 100,\n      users: [],\n      likes: []\n    };\n  } // HTMLが読み込まれる時に呼び出されるメソッド\n  // localStrageからの取得処理はここで呼び出す\n\n\n  componentDidMount() {\n    const likesState = localStorage.getItem(LIKES_KEY);\n    const likeinitialState = likesState ? JSON.parse(likesState) : [];\n    this.setState({\n      likes: likeinitialState\n    });\n    const usersState = localStorage.getItem(USERS_KEY);\n\n    if (usersState == null) {\n      const users = [{\n        id: 1,\n        name: \"Tanaka\",\n        image: \"images/バッハ.jpeg\",\n        count: 100,\n        counted: 0\n      }, {\n        id: 2,\n        name: \"Suzuki\",\n        image: \"images/女の子.jpeg\",\n        count: 100,\n        counted: 0\n      }, {\n        id: 3,\n        name: \"Okada\",\n        image: \"images/男の子.jpeg\",\n        count: 100,\n        counted: 0\n      }, {\n        id: 4,\n        name: \"Uzuki\",\n        image: \"images/かっぱ.jpeg\",\n        count: 100,\n        counted: 0\n      }, {\n        id: 5,\n        name: \"Hamada\",\n        image: \"images/中二病.jpeg\",\n        count: 100,\n        counted: 0\n      }, {\n        id: 6,\n        name: \"Yamada\",\n        image: \"images/警備員.jpeg\",\n        count: 100,\n        counted: 0\n      }, {\n        id: 7,\n        name: \"Tozuki\",\n        image: \"images/配達員.jpeg\",\n        count: 100,\n        counted: 0\n      }, {\n        id: 8,\n        name: \"Kanda\",\n        image: \"images/会社員.jpeg\",\n        count: 100,\n        counted: 0\n      }, {\n        id: 9,\n        name: \"Wakui\",\n        image: \"images/大臣.jpeg\",\n        count: 100,\n        counted: 0\n      }, {\n        id: 10,\n        name: \"onoda\",\n        image: \"images/ピーターパン.jpeg\",\n        count: 100,\n        counted: 0\n      }];\n      localStorage.setItem(USERS_KEY, JSON.stringify(users));\n      this.setState({\n        users: users,\n        curUser: users[0],\n        invUser: users[0]\n      });\n    } else {\n      const userinitialState = usersState ? JSON.parse(usersState) : [];\n      this.setState({\n        users: userinitialState,\n        curUser: userinitialState[0],\n        invUser: userinitialState[0]\n      });\n    }\n\n    const appState = localStorage.getItem(APP_KEY);\n    const initialState = appState ? JSON.parse(appState) : [];\n    this.setState({\n      todos: initialState\n    }); // localStrageに格納したデータのidと重複しない様にidを更新する\n\n    currentId = initialState ? initialState.length : 0;\n  }\n\n  render() {\n    const {\n      todos,\n      filter\n    } = this.state;\n    const filteredTodos = todos.filter(({\n      completed\n    }) => {\n      switch (filter) {\n        case \"all\":\n          return true;\n\n        case \"uncompleted\":\n          return !completed;\n\n        case \"completed\":\n          return completed;\n\n        default:\n          return true;\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      handleCurUserSelectChange: this.handleCurUserSelectChange,\n      handleInvUserSelectChange: this.handleInvUserSelectChange,\n      curUser: this.state.curUser,\n      invUser: this.state.invUser,\n      users: this.state.users,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, filteredTodos.map(({\n      id,\n      text,\n      completed,\n      editing,\n      curUser,\n      invUser,\n      postDate\n    }) => /*#__PURE__*/React.createElement(\"li\", {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 22\n      }\n    }, editing ? /*#__PURE__*/React.createElement(EditTodo, {\n      id: id,\n      text: text,\n      onCancel: this.handleChangeTodoAttribute,\n      onSubmit: this.handleUpdateTodoText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }\n    }) : /*#__PURE__*/React.createElement(Todo, {\n      id: id,\n      text: text,\n      completed: completed,\n      postDate: postDate,\n      onChange: this.handleChangeTodoAttribute,\n      onEdit: this.handleChangeTodoAttribute,\n      onDelete: this.handleClickDelete,\n      curUser: curUser,\n      invUser: invUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(LikeButton, {\n      onLkeButtonClick: this.onLkeButtonClick,\n      users: this.state.users,\n      likes: this.state.likes,\n      curUser_id: this.state.curUser[\"id\"],\n      todo_id: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }), \",\"))));\n  }\n\n  //日付から文字列に変換する関数\n  getStringFromDate(date) {\n    var year_str = date.getFullYear(); //月だけ+1すること\n\n    var month_str = 1 + date.getMonth();\n    var day_str = date.getDate();\n    var hour_str = date.getHours();\n    var minute_str = date.getMinutes();\n    var second_str = date.getSeconds();\n    let format_str = 'YYYY-MM-DD hh:mm:ss';\n    format_str = format_str.replace(/YYYY/g, year_str);\n    format_str = format_str.replace(/MM/g, month_str);\n    format_str = format_str.replace(/DD/g, day_str);\n    format_str = format_str.replace(/hh/g, hour_str);\n    format_str = format_str.replace(/mm/g, minute_str);\n    format_str = format_str.replace(/ss/g, second_str);\n    return format_str;\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/komiyaakira/Desktop/todoapp/src/components/App.js"],"names":["React","Form","Todo","LikeButton","EditTodo","currentId","APP_KEY","USERS_KEY","LIKES_KEY","App","Component","constructor","props","onLkeButtonClick","user_id","todo_id","users","state","result","todos","filter","value","id","todo","todoCurUser","todoInvUser","console","log","likes","data","length","alert","curUser","y","counted","setState","countUser","like","concat","setTimeout","localStorage","setItem","JSON","stringify","handleSubmit","text","invUser","date","Date","newTodo","completed","editing","postDate","getStringFromDate","newTodos","handleCurUserSelectChange","handleInvUserSelectChange","handleChangeFilter","handleChangeAllCompleted","map","handleUpdateTodoText","handleClickDelete","handleChangeDeleteCompleted","handleChangeTodoAttribute","key","count","componentDidMount","likesState","getItem","likeinitialState","parse","usersState","name","image","userinitialState","appState","initialState","render","filteredTodos","year_str","getFullYear","month_str","getMonth","day_str","getDate","hour_str","getHours","minute_str","getMinutes","second_str","getSeconds","format_str","replace"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport Form from \"./Form\"\nimport Todo from \"./Todo\"\nimport LikeButton from \"./LikeButton\"\nimport EditTodo from \"./EditTodo\"\n\n\nlet currentId = 0\nconst APP_KEY = 'todos'\nconst USERS_KEY = 'users'\nconst LIKES_KEY = 'likes'\n\nclass App extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            todos: [],\n            curUser: \"\",\n            invUser: \"\",\n            count: 100,\n            users : [],\n            likes: []\n        };\n    }\n\n    // HTMLが読み込まれる時に呼び出されるメソッド\n    // localStrageからの取得処理はここで呼び出す\n    componentDidMount(){\n        const likesState = localStorage.getItem(LIKES_KEY)\n        const likeinitialState = likesState ? JSON.parse(likesState) : []\n        this.setState({\n            likes: likeinitialState\n        })\n        const usersState = localStorage.getItem(USERS_KEY)\n        if (usersState == null){\n            const users = [\n                { id: 1, name: \"Tanaka\",image:\"images/バッハ.jpeg\",count: 100,counted:0},\n                { id: 2, name: \"Suzuki\",image:\"images/女の子.jpeg\",count: 100,counted:0},\n                { id: 3, name: \"Okada\",image:\"images/男の子.jpeg\",count: 100,counted:0},\n                { id: 4, name: \"Uzuki\",image:\"images/かっぱ.jpeg\",count: 100,counted:0},\n                { id: 5, name: \"Hamada\",image:\"images/中二病.jpeg\",count: 100,counted:0},\n                { id: 6, name: \"Yamada\",image:\"images/警備員.jpeg\",count: 100,counted:0},\n                { id: 7, name: \"Tozuki\",image:\"images/配達員.jpeg\",count: 100,counted:0},\n                { id: 8, name: \"Kanda\",image:\"images/会社員.jpeg\",count: 100,counted:0},\n                { id: 9, name: \"Wakui\",image:\"images/大臣.jpeg\",count: 100,counted:0},\n                { id: 10, name: \"onoda\",image:\"images/ピーターパン.jpeg\",count: 100,counted:0}\n            ];\n            localStorage.setItem(USERS_KEY, JSON.stringify(users));\n            this.setState({\n                users: users,\n                curUser: users[0],\n                invUser:users[0]\n            })\n        }else{\n            const userinitialState = usersState ? JSON.parse(usersState) : []\n            this.setState({\n                users: userinitialState,\n                curUser: userinitialState[0],\n                invUser: userinitialState[0]\n            })\n        }\n\n        const appState = localStorage.getItem(APP_KEY)\n        const initialState = appState ? JSON.parse(appState) : []\n        this.setState({\n            todos: initialState\n        })\n\n        // localStrageに格納したデータのidと重複しない様にidを更新する\n        currentId = initialState ? initialState.length : 0\n    }\n\n    render() {\n        \n        const {todos,filter} =this.state\n        const filteredTodos = todos.filter(({ completed }) => {\n            switch(filter) {\n                case \"all\":\n                    return true;\n                case \"uncompleted\":\n                    return !completed;\n                case \"completed\":\n                    return completed;\n                default:\n                    return true;\n            }\n        });\n        return( \n        <div>\n            <Form onSubmit={this.handleSubmit} handleCurUserSelectChange={this.handleCurUserSelectChange} handleInvUserSelectChange={this.handleInvUserSelectChange} curUser={this.state.curUser} invUser={this.state.invUser} users={this.state.users} />\n            <ul>\n                {filteredTodos.map( ({ id, text, completed,editing,curUser,invUser,postDate}) => \n                    (<li key ={id}>\n                        {editing ?(\n                            <EditTodo id={id} text = {text} onCancel={this.handleChangeTodoAttribute} onSubmit={this.handleUpdateTodoText}/>\n                        ):(\n                        <Todo id={id} text={text} completed={completed} postDate = {postDate} onChange ={this.handleChangeTodoAttribute} onEdit={this.handleChangeTodoAttribute} onDelete = {this.handleClickDelete} curUser = {curUser} invUser = {invUser}/>\n                        )}\n                        <LikeButton onLkeButtonClick = {this.onLkeButtonClick} users = {this.state.users} likes = {this.state.likes} curUser_id = {this.state.curUser[\"id\"]} todo_id = {id}/>,\n                    </li>\n                ))}\n            </ul>\n        </div>\n        );\n    }\n    onLkeButtonClick = (user_id,todo_id) => {\n        let users = this.state.users\n        var result = this.state.todos.filter(function(value) {\n            return (todo_id === value.id);\n        }); \n        const todo = result[0]\n        const todoCurUser = todo['curUser']['id']\n        const todoInvUser = todo['invUser']['id']\n\n        console.log(todoCurUser)\n        console.log(todoInvUser)\n        console.log(this.state.likes)\n        var data = this.state.likes;\n            var result = data.filter(function(value) {\n            return (user_id === value.user_id && todo_id === value.todo_id);\n        });\n        console.log(result.length);\n        if (result.length >= 15){\n            alert(\"15回以上押せません\")\n            return \n        }\n        if (this.state.curUser['count'] == 0){\n            alert(\"拍手できません\")\n            return\n        }\n        if ( todoCurUser== user_id){\n            alert(\"拍手できません\")\n            return\n        }\n        if ( todoInvUser== user_id){\n            alert(\"拍手できません\")\n            return\n        }\n        for (let y = 0;y < users.length;y++) {\n            if (users[y].id === todoCurUser){\n                users[y].counted++\n            }\n            if (users[y].id === todoInvUser){\n                users[y].counted++\n            }\n        }\n        this.setState({users:users})\n        let countUser = this.state.curUser\n        countUser['count'] -= 2\n        this.setState({curUser:countUser})\n        const like = {user_id:user_id,todo_id:todo_id}\n        this.setState({likes:this.state.likes.concat(like)})\n        setTimeout(() => ( localStorage.setItem(LIKES_KEY, JSON.stringify(this.state.likes))), 10)\n        setTimeout(() => ( localStorage.setItem(USERS_KEY, JSON.stringify(this.state.users))), 10);\n    }\n\n    //日付から文字列に変換する関数\n    getStringFromDate(date) {\n\n        var year_str = date.getFullYear();\n        //月だけ+1すること\n        var month_str = 1 + date.getMonth();\n        var day_str = date.getDate();\n        var hour_str = date.getHours();\n        var minute_str = date.getMinutes();\n        var second_str = date.getSeconds();\n\n\n        let format_str = 'YYYY-MM-DD hh:mm:ss';\n        format_str = format_str.replace(/YYYY/g, year_str);\n        format_str = format_str.replace(/MM/g, month_str);\n        format_str = format_str.replace(/DD/g, day_str);\n        format_str = format_str.replace(/hh/g, hour_str);\n        format_str = format_str.replace(/mm/g, minute_str);\n        format_str = format_str.replace(/ss/g, second_str);\n\n        return format_str;\n    };\n    handleSubmit = (text,curUser,invUser) =>{\n        const date = new Date()\n        const newTodo = {\n            id: currentId,\n            text,\n            curUser,\n            invUser,\n            completed: false,\n            editing: false,\n            postDate: this.getStringFromDate(date)\n        };\n\n        if ( curUser== invUser){\n            return\n        };\n        console.log(newTodo)\n        const newTodos = [newTodo,...this.state.todos]\n        this.setState({ todos: newTodos })\n        // localStrageにtodoをセット\n        localStorage.setItem(APP_KEY, JSON.stringify(newTodos));\n        currentId++;\n    };\n    handleCurUserSelectChange = (curUser) =>{\n        this.setState({curUser:curUser})\n    }\n    handleInvUserSelectChange = (invUser) =>{\n        this.setState({invUser:invUser})\n    }\n    handleChangeFilter = filter => {\n        this.setState({filter});\n    };\n\n    handleChangeAllCompleted = completed =>{\n        const newTodos =this.state.todos.map(todo=>{\n            return{\n                ...todo,\n                completed,\n            }\n        })\n        this.setState({ todos: newTodos})\n        // localStrageにtodoをセット\n        localStorage.setItem(APP_KEY, JSON.stringify(newTodos));\n    };\n\n    handleUpdateTodoText =(id,text) => {\n        const newTodos = this.state.todos.map(todo => {\n            if (todo.id === id){\n                return{\n                    ...todo,\n                    text,\n                    editing: false\n                };\n            }\n            return todo;\n        })\n        this.setState({ todos: newTodos});\n        // localStrageにtodoをセット\n        localStorage.setItem(APP_KEY, JSON.stringify(newTodos));\n    };\n\n    handleClickDelete = id => {\n        const newTodos = this.state.todos.filter(todo => todo.id !== id)\n        this.setState({todos: newTodos})\n        // localStrageにtodoをセット\n        localStorage.setItem(APP_KEY, JSON.stringify(newTodos));\n    };\n    \n    handleChangeDeleteCompleted = () => {\n        const newTodos =this.state.todos.filter(({completed}) => !completed)\n        this.setState({todos: newTodos})\n        // localStrageにtodoをセット\n        localStorage.setItem(APP_KEY, JSON.stringify(newTodos));\n    };\n\n    handleChangeTodoAttribute = (id, key,value) =>{\n        const newTodos = this.state.todos.map(todo=>{\n            if (todo.id === id){\n                return{\n                    ...todo,\n                    [key]: value\n                }\n            }\n            return todo\n        });\n        this.setState({ todos: newTodos});\n        // localStrageにtodoをセット\n        localStorage.setItem(APP_KEY, JSON.stringify(newTodos));\n    };\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}